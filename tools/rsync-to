#!/bin/bash
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
# Copyright (c) 2014, Joyent, Inc.
#

#
# Rsync the config-agent code in this working copy to the
# given SDC headnode and zone.
#
# Usage:
#   ./tools/rsync-to HEADNODE ZONE-UUID-OR-ALIAS
#
# Examples:
#   ./tools/rsync-to root@10.99.99.7 cnapi  # the CoaL CNAPI zone
#   ./tools/rsync-to coal manatee0          # if 'coal' is in ~/.ssh/config
#   ./tools/rsync-to coal global            # the config-agent in the GZ
#

if [[ -n "$TRACE" ]]; then
    export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
    set -o xtrace
fi
set -o errexit
set -o pipefail

TOP=$(cd $(dirname $0)/../; pwd)


#---- support stuff

function fatal
{
    echo "$0: fatal error: $*"
    exit 1
}


#---- mainline

NODE=$1
[[ -n "$NODE" ]] || fatal "no HEADNODE arg given"
ZONE=$2
[[ -n "$ZONE" ]] || fatal "no ZONE-UUID-OR-ALIAS arg given"

if [[ $ZONE == "global" ]]; then
    ZONEUUID=global
    ZONEALIAS=global
else
    ZONEUUID=$(ssh $NODE "vmadm lookup -1 uuid=$ZONE 2>/dev/null || vmadm lookup -1 alias=~$ZONE")
    ZONEALIAS=$(ssh $NODE "vmadm get $ZONEUUID | json alias")
fi
echo "ZONE: $ZONEUUID ($ZONEALIAS)"

extraOpts=
if [[ $(uname -s) != "SunOS" ]]; then
    extraOpts="--exclude *.node --exclude build"
fi
baseDir=/zones/$ZONEUUID/root/opt/smartdc/config-agent
if [[ "$ZONEUUID" == "global" ]]; then
    baseDir=/opt/smartdc/agents/lib/node_modules/config-agent
fi


# Clean and rsync.
if [[ $(uname -s) == "SunOS" ]]; then
    # Clean node_modules everytime because that's preferred and we can
    # use the binary .node files from this plat.
    ssh $NODE rm -rf $baseDir/node_modules
fi
for f in agent.js bin cmd lib Makefile node_modules npm package.json smf; do
    rsync -av ${TOP}/$f $NODE:$baseDir/ $extraOpts
done


# Restart config-agent.
state=$(ssh ${NODE} svcs -z ${ZONEUUID} -H -o state config-agent)
if [[ "$state" == "maintenance" ]]; then
    ssh ${NODE} svcadm -z ${ZONEUUID} clear config-agent
else
    ssh ${NODE} svcadm -z ${ZONEUUID} restart config-agent
fi
